{"version":3,"sources":["components/navigation/Navigation.js","components/logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","serviceWorker.js","index.js","components/logo/logo.svg"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","alt","src","logo","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","FaceRecognition","imageUrl","box","position","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","htmlFor","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","console","log","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","onROuteCHange","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"wMAoBeA,EAjBI,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cACb,OAD4C,EAAhBC,WAGxB,yBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC1C,uBAAGC,QAAS,kBAAIL,EAAc,YAAWM,UAAU,2CAAnD,aAIJ,yBAAKJ,MAAO,CAACC,QAAS,OAAQC,eAAgB,aAC1C,uBAAGC,QAAS,kBAAIL,EAAc,WAAUM,UAAU,2CAAlD,WACA,uBAAGD,QAAS,kBAAIL,EAAc,aAAYM,UAAU,2CAApD,c,kCCKDC,G,MAbF,WACT,OACI,yBAAKD,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,oBAAoBE,QAAS,CAAEC,IAAM,IAAMP,MAAO,CAAEQ,OAAQ,IAAKC,MAAO,MACvF,yBAAKL,UAAU,cACZ,yBAAKM,IAAK,OAAOC,IAAKC,WCSvBC,G,MAhBO,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,eACnC,OACI,6BACI,uBAAGX,UAAU,MACR,yEAEL,yBAAKA,UAAU,UACX,yBAAKA,UAAU,gCACX,2BAAOA,UAAU,qBAAqBY,KAAK,OAAOC,SAAUH,IAC5D,4BAAQV,UAAU,mDAAmDD,QAASY,GAA9E,eCGLG,EAbF,WACT,OACI,6BACI,yBAAKd,UAAU,YACV,gCAEL,yBAAKA,UAAU,YACV,QCKFe,G,MAXS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,IAChC,OACI,yBAAKjB,UAAU,gBAAgBJ,MAAO,CAACsB,SAAS,aAC5C,yBAAKlB,UAAU,eACX,yBAAKmB,GAAG,aAAab,IAAI,GAAGC,IAAMS,EAAUX,MAAM,OAAOD,OAAO,SAChE,yBAAKJ,UAAU,eAAeJ,MAAO,CAACwB,IAAKH,EAAII,OAAQC,MAAML,EAAIM,SAAUC,OAAQP,EAAIQ,UAAWC,KAAKT,EAAIU,eCsB5GC,EA5BA,SAAC,GAAqB,IAApBlC,EAAmB,EAAnBA,cACb,OACI,6BAASM,UAAU,kEACnB,0BAAMA,UAAU,gBACZ,0BAAMA,UAAU,WACZ,8BAAUmB,GAAG,UAAUnB,UAAU,6BACjC,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACA,2BAAO7B,UAAU,qEAAqEY,KAAK,QAAQkB,KAAK,gBAAiBX,GAAG,mBAEhI,yBAAKnB,UAAU,OACX,2BAAOA,UAAU,oBAAoB6B,QAAQ,YAA7C,YACA,2BAAO7B,UAAU,uEAAuEY,KAAK,WAAWkB,KAAK,WAAYX,GAAG,eAGhI,yBAAKnB,UAAU,IACf,2BAAOD,QAAS,kBAAML,EAAc,SAASM,UAAU,uEAAuEY,KAAK,SAASmB,MAAM,aAElJ,yBAAK/B,UAAU,eACf,uBAAGD,QAAS,kBAAML,EAAc,aAAcM,UAAU,kCAAxD,iBCUDgC,EA9BE,SAAC,GAAqB,IAApBtC,EAAmB,EAAnBA,cACf,OACI,6BAASM,UAAU,kEACnB,0BAAMA,UAAU,gBACZ,0BAAMA,UAAU,WACZ,8BAAUmB,GAAG,UAAUnB,UAAU,6BACjC,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACX,2BAAOA,UAAU,oBAAoB6B,QAAQ,iBAA7C,SACA,2BAAO7B,UAAU,qEAAqEY,KAAK,QAAQkB,KAAK,gBAAiBX,GAAG,mBAEhI,yBAAKnB,UAAU,OACX,2BAAOA,UAAU,oBAAoB6B,QAAQ,QAA7C,QACA,2BAAO7B,UAAU,qEAAqEY,KAAK,OAAOkB,KAAK,OAAQX,GAAG,UAEtH,yBAAKnB,UAAU,OACX,2BAAOA,UAAU,oBAAoB6B,QAAQ,YAA7C,YACA,2BAAO7B,UAAU,uEAAuEY,KAAK,WAAWkB,KAAK,WAAYX,GAAG,eAGhI,yBAAKnB,UAAU,IACf,2BAAOD,QAAS,kBAAML,EAAc,SAASM,UAAU,uEAAuEY,KAAK,SAASmB,MAAM,kB,0CCX5JE,EAAM,IAAIC,IAASC,IAAI,CAACC,OAAQ,qCAEhCC,EAAmB,CACvBC,UAAW,CACRC,OAAQ,CACNR,MAAO,GACPS,QAAS,CACPC,QAAQ,EACRC,WAAY,QAoFNP,E,kDA7Eb,aAAe,IAAD,8BACZ,gBAUJQ,sBAAwB,SAACC,GACvB,IAAMC,EAAeD,EAAKE,QAAQ,GAAGF,KAAKG,QAAQ,GAAGC,YAAYC,aAC3DC,EAAQC,SAASC,eAAe,cAChChD,EAASiD,OAAOH,EAAM9C,QACtBC,EAAQgD,OAAOH,EAAM7C,OAC3B,MAAO,CACLsB,QAASkB,EAAaS,SAAWjD,EACjCgB,OAAQwB,EAAaU,QAAUnD,EAC/BmB,SAAUlB,EAASwC,EAAaW,UAAYnD,EAC5CoB,UAAWrB,EAAUyC,EAAaY,WAAarD,IApBnC,EAyBhBsD,eAAiB,SAACzC,GAChB,EAAK0C,SAAS,CAAC1C,IAAKA,IACpB2C,QAAQC,IAAI5C,IA3BE,EA8BdP,cAAgB,SAACoD,GACf,EAAKH,SAAS,CAACI,MAAOD,EAAME,OAAOjC,SA/BvB,EAkCdpB,eAAiB,WACf,EAAKgD,SAAS,CAAC3C,SAAU,EAAKiD,MAAMF,QACpC9B,EAAIiC,OAAOC,QAAQjC,IAASkC,kBAAmB,EAAKH,MAAMF,OACrDM,MAAK,SAAAC,GACJ,EAAKZ,eAAe,EAAKf,sBAAsB2B,OAEhDC,OAAM,SAAAC,GACLZ,QAAQC,IAAIW,OAzCN,EA6Cd9E,cAAgB,SAAC+E,GACD,YAAVA,EACF,EAAKd,SAAS,CAAChE,YAAY,IACR,SAAV8E,GACT,EAAKd,SAAS,CAAChE,YAAY,IAE7B,EAAKgE,SAAS,CAACc,MAAOA,KAjDtB,EAAKR,MAAQ,CACXF,MAAO,GACP/C,SAAU,GACVC,IAAK,GACLwD,MAAO,SACP9E,YAAY,GAPF,E,qDAsDJ,IAAD,EACoC+E,KAAKT,MAAzCtE,EADA,EACAA,WAAYsB,EADZ,EACYA,IAAKD,EADjB,EACiBA,SAAUyD,EAD3B,EAC2BA,MAClC,OACE,yBAAKzE,UAAU,OACb,kBAAC,IAAD,CAAWA,UAAU,YAAY2E,OAAQtC,IACzC,kBAAC,EAAD,CAAY1C,WAAYA,EAAYD,cAAegF,KAAKhF,gBACxD,kBAAC,EAAD,MACW,SAAV+E,EACG,iCAAM,kBAAC,EAAD,MACR,kBAAC,EAAD,CAAe/D,cAAegE,KAAKhE,cAAeC,eAAgB+D,KAAK/D,iBACvE,kBAAC,EAAD,CAAiBM,IAAKA,EAAKD,SAAUA,KAG3B,WAAVyD,EACI,kBAAC,EAAD,CAAQ/E,cAAegF,KAAKhF,gBAC5B,kBAAC,EAAD,CAAUkF,cAAeF,KAAKhF,qB,GAtE1BmF,aCdEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAGFlC,SAASC,eAAe,SDsHpB,kBAAmBkC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdnB,OAAM,SAAAoB,GACL/B,QAAQ+B,MAAMA,EAAMC,a,mBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.4aa5cae3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n        if(isSignedIn) {\r\n            return(\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={()=>onRouteChange('signout')}className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>)\r\n        } else {\r\n            return (\r\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={()=>onRouteChange('signin')}className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={()=>onRouteChange('register')}className='f3 link dim black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n            );\r\n        }\r\n       \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logo from './logo.svg';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return(\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n             <div className=\"Tilt-inner\">\r\n                <img alt ='logo' src={logo}></img> \r\n             </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}\r\n//Icons made by\r\n// <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return(\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your pictures, upload a picture'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='form center pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-dark-blue' onClick={onButtonSubmit}>Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n    return(\r\n        <div>\r\n            <div className='white f3'>\r\n                {'Dom, your current rank is...'}\r\n            </div>\r\n            <div className='white f1'>\r\n                {'#1'}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\nimport './FaceRecognition.css'\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma dib' style={{position:'relative'}}  >\r\n            <div className='absolut mt2'>\r\n                <img id='inputImage' alt='' src ={imageUrl} width='500x' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, right:box.rightCol, bottom: box.bottomRow, left:box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n    return(\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <form className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p onClick={() => onRouteChange('register')}  className=\"b f6 link dim black db pointer\">Register</p>\r\n                </div>\r\n            </form>\r\n        </main>\r\n       </article>\r\n    )\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\n\r\nconst Register = ({onRouteChange}) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n            <form className=\"measure\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                </div>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"\">\r\n                <input onClick={() => onRouteChange('home')} className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                </div>\r\n            </form>\r\n        </main>\r\n       </article>\r\n\r\n    )\r\n}\r\n\r\nexport default Register;","import React, {Component} from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\nconst app = new Clarifai.App({apiKey: '6aa072a43fce463381384429b18cc13a'});\n\nconst particlesOptions = {\n  particles: {\n     number: {\n       value: 70,\n       density: {\n         enable: true,\n         value_area: 800\n       }\n     }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\ncalculateFaceLocation = (data) => {\n  const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  const image = document.getElementById('inputImage');\n  const height = Number(image.height);\n  const width = Number(image.width);\n  return {\n    leftCol: clarifaiFace.left_col * width,\n    topRow: clarifaiFace.top_row * height,\n    rightCol: width - (clarifaiFace.right_col * width),\n    bottomRow: height - (clarifaiFace.bottom_row * height)\n  }\n  \n}\n\ndisplayFaceBox = (box) => {\n  this.setState({box: box})\n  console.log(box)\n}\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n        .then(response => {\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        })\n        .catch(err => {\n          console.log(err);\n        });\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route})\n  }\n\n  render() {\n   const  {isSignedIn, box, imageUrl, route} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles' params={particlesOptions} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        <Logo />\n        {route === 'home' \n          ? <div> <Rank />\n          <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n          </div>\n          : (\n          route === 'signin' \n            ? <SignIn onRouteChange={this.onRouteChange}/>\n            : <Register onROuteCHange={this.onRouteChange}/>\n        )\n        } \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.982786b2.svg\";"],"sourceRoot":""}